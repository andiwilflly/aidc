/**************************************************
 * Sass mixins that allow you to write proper BEM
 * with one level nesting for cascading block
 * modifiers in a very convenient way.
 *
 * Free to use under the WTFPL license.
 * http://www.wtfpl.net/
 **************************************************/

/*  Example:
	<div class="bem-test">
		<div class="bem-test__head">head</div>
		<div class="bem-test__body">body</div>
		<div class="bem-test__footer">footer</div>
		</div>
		<div class="bem-test--error">
		<div class="bem-test__head">ohoh</div>
		<div class="bem-test__head--long">errhead</div>
		<div class="bem-test__body">err body </div>
		<div class="bem-test__footer">err footer</div>
	</div>

	@include bem-block(bem-test) {
		background: darkkhaki;

		@include bem-element(head) {
			color: darkred;
		}
		@include bem-element(body) {
			color: forestgreen;
		}
		@include bem-element(footer) {
			color: darkblue;
		}
	}

	@include bem-block(bem-test, $modifier: error) {
		background: dodgerblue;

		@include bem-element(head) {
			color: powderblue;
		}

		@include bem-element(head, $modifier: long) {
			color: white;
			background: orange;
		}
	}
*/

$bem-block-prefix: "" !default;
$bem-element-prefix: "__" !default;
$bem-modifier-prefix: "--" !default;

@function str-index-or($heystack, $needle, $or) {
	$index: str-index($heystack, $needle);
	@if($index == null) {
		$index: $or;
	}
	@return $index;
}

@function extract-block-name($selector) {
	$selector: #{$selector};
	$inf: 99999;
	$dot-index: str-index-or($selector, ".", 1);
	$space-index: str-index-or($selector, " ", $inf);
	$modifier-index: str-index-or($selector, $bem-modifier-prefix, $inf);
	$element-index: str-index-or($selector, $bem-element-prefix, $inf);
	$pseudo-index: str-index-or($selector, ":", $inf);
	$min-index: min($space-index, $modifier-index, $element-index, $pseudo-index);

	@return str-slice($selector, $dot-index + 1, $min-index - 1);
}

@mixin bem($name: false, $modifier: "", $prefix: "") {
	@if(not $name) {
		@error "You always need to specify the name of a block or an element!";
	}

	@if($modifier != "") {
		$modifier: #{$bem-modifier-prefix + $modifier};
		#{"." + $prefix + $name + $modifier} {
			@extend #{"." + $prefix + $name};
			@content;
		}
	} @else {
		#{"." + $prefix + $name + $modifier} {
			@content;
		}
	}
}

@mixin bem-block($name, $modifier: "") {
	@include bem($name, $modifier, $bem-block-prefix) {
		@content;
	}
}

@mixin bem-element($name, $modifier: "") {
	@include bem($name, $modifier, #{$bem-block-prefix + extract-block-name(&) + $bem-element-prefix}) {
		@content;
	}
}